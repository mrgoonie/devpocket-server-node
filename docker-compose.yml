# DevPocket Server Docker Compose Configuration
# Development environment with all necessary services

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: devpocket-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: devpocket_server
      POSTGRES_USER: devpocket
      POSTGRES_PASSWORD: devpocket_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - devpocket-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devpocket -d devpocket_server"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: devpocket-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - devpocket-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DevPocket API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: devpocket-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
      PORT: 8000
      DATABASE_URL: postgresql://devpocket:devpocket_password@postgres:5432/devpocket_server
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      FROM_EMAIL: ${FROM_EMAIL:-DevPocket <noreply@devpocket.app>}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      BASE_URL: ${BASE_URL:-http://localhost:8000}
      CLUSTER_NAME: development-cluster
      # Rate limiting
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      AUTH_RATE_LIMIT_MAX_REQUESTS: 5
      ENV_RATE_LIMIT_MAX_REQUESTS: 10
      # WebSocket configuration
      WS_HEARTBEAT_INTERVAL: 30000
      WS_MAX_CONNECTIONS_PER_USER: 10
      # Environment limits
      FREE_PLAN_MAX_ENVIRONMENTS: 2
      STARTER_PLAN_MAX_ENVIRONMENTS: 5
      PRO_PLAN_MAX_ENVIRONMENTS: 20
      # Debug
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - devpocket-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: devpocket-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx-dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - devpocket-network
    profiles:
      - production-like

  # Adminer for database management (Development only)
  adminer:
    image: adminer:latest
    container_name: devpocket-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: bootstrap
    depends_on:
      - postgres
    networks:
      - devpocket-network
    profiles:
      - dev-tools

  # Redis Commander for Redis management (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: devpocket-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: devpocket
    depends_on:
      - redis
    networks:
      - devpocket-network
    profiles:
      - dev-tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  devpocket-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16